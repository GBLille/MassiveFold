params {
    help = false
    h = false
    calibration = false
    predictions_per_model = 1
    batch_size = 5
    wall_time = 20
    force_msas_computation = false
    only_msas = false
    tool = "ColabFold"
    model_preset = "multimer"
    pair_strategy = "greedy"
    use_dropout = "false"
    stop_at_score = "100"
    num_recycle = 2
    disable_cluster_profile = "false"
    recycle_early_stop_tolerance = 0.5
    model_to_use = ""
    msas_precomputed = false
    database_dir = '/default/path/if/not/set'   
    config_tool = "/home/ubuntu/MassiveFold/massivefold/parallelization/ColabFold_params.json"
}

profiles {
    local {
        process.executor  = 'local'
        docker.enabled    = false
        singularity.enabled = false
        apptainer.enabled = false
    }

    docker {
        docker.enabled    = true
        docker.autoMounts = true
        singularity.enabled = false
        apptainer.enabled = false
        
        process {
            withLabel: colabfold {
                container         = 'jysgro/colabfold:latest'
                docker.runOptions = "-v ${params.database_dir}:${params.database_dir}:rw --gpus all"

            }
            withLabel: python_treatment {
                container = 'romudock/python_basic_packages:latest'
            }
        }

    }

    apptainer {
        docker.enabled    = false
        singularity.enabled = false
        apptainer.enabled = true
        apptainer.autoMounts = true

        process {
            withLabel: colabfold {
                container = 'jysgro/colabfold:latest'
                apptainer.runOptions = "--bind ${params.database_dir}:${params.database_dir}:rw --nv"
            }
            withLabel: python_treatment {
                container = 'romudock/python_basic_packages:latest'
            }
        }
    }

    conda {
    docker.enabled    = false
    singularity.enabled = false
    apptainer.enabled = false
    conda.enabled = true
    process.conda = 'mf_colabfold.yml
  }
}